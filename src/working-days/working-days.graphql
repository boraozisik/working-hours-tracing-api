scalar DateTime

type WorkingDay {
  id: Int!
  day: Int!
  name: String!
  email: String!
  mobile: String
  company: String
  message: String
  exitedAt: DateTime
}

input CreateWorkingDayInput {
  day: Int!
  name: String!
  email: String!
  mobile: String
  company: String
  message: String
  exitedAt: DateTime
}
input OrderByParams {
  field: String
  direction: String
}

type Query {
  workingDays(orderBy: OrderByParams): [WorkingDay]!
  workingDay(id: Int!): WorkingDay
  totalWorkingHours: Int!
}

type Mutation {
  createWorkingDay(createWorkingDayInput: CreateWorkingDayInput!): WorkingDay!
}

type Result {
  total: Int!
}

type Subscription {
  totalUpdated: Result
}
